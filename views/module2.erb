<% content_for :script do %>
  <script src="/javascript/slideshow.js"></script>
  <script src="/javascript/plugins/css-edit.js"></script>
  <script src="/javascript/plugins/css-snippets.js"></script>
  <script src="/javascript/plugins/css-controls.js"></script>
  <script src="/javascript/plugins/code-highlight.js"></script>
  <script>
    var slideshow = new SlideShow();

    var snippets = document.querySelectorAll('.snippet');
    for(var i=0; i<snippets.length; i++) {
      new CSSSnippet(snippets[i]);
    }

    var cssControls = document.querySelectorAll('.css-control');
    for(var i=0; i<cssControls.length; i++) {
      new CSSControl(cssControls[i]);
    }
  </script>
<% end %>


<header id="cover" class="slide">
    <h1>CSS Workshop</h1>
    <h2>Cascade, specificity and inheritance</h2>
    <p class="attribution">
      @nobuti</br>February 2014.
    </p>
</header>

<section>
  
  <section class="slide" title="What does cascade mean?" id="cascade">
    <h2>What is the cascade thing?</h2>

    <p class="delayed">I always imagine that "cascading stylesheets" means something like <em>fighting stylesheets</em>.</p>

    <p class="delayed">One rule tells your H3 tag to be red, another rule tells it to be green -- the rules are contradicting each other, who will win!? <strong>Stylesheet deathmatch!</strong></p>

    <p class="delayed">OK maybe that's a slight exaggeration... Let's get serious.</p>

    <p class="delayed">CSS styles can be specified in many ways, but they will all <em>cascade</em> into one stylesheet in the end. Sometimes <em>conflicts</em> will arise between the stylesheets that influence how styles are merged. </p>
  </section>
  
  <section class="slide" title="Types of stylesheets" id="types-of-stylesheets">
    <h2>Origin: Types of stylesheets</h2>

    <p>HTML documents may have <strong>three types of stylesheets</strong> applied to them.</p>
    <ul>
      <li class="delayed"><strong>Browser stylesheets</strong>: Browsers apply stylesheets to all web documents. These are referred to as <em>default stylesheet</em>.</li>
      <li class="delayed"><strong>User stylesheets</strong>: Most modern browser allow users to apply their own stylesheets within the browser.</li>
      <li class="delayed"><strong>Author stylesheets</strong>: Web authors can apply one or more stylesheets to an HTML document.</li>
    </ul>
  </section>
  
  <section class="slide" id="author-styles">
    <div class="grid two columns">
      <div class="column">
        <h2>Author stylesheets</h2>  
        <p>In the last module, we've seen that an author may add stylesheets to a document by 3 methods:</p>  
        <ul>
          <li class="delayed"><em>Inline styles</em>: CSS is applied to elements in the HTML code using the style attribute.</li>
          <li class="delayed"><em>Embedded styles</em>: CSS styles are placed in the head of the document using the style element.</li>
          <li class="delayed"><em>External styles</em>: Styles are applied using the link tag or @import.</li>
        </ul>
      </div>

      <div class="column middle align-center">
        <img src="/images/module2/author-styles.png" alt="Author styles" class="image rounded delayed">
      </div>
    </div>
  </section>

  <section class="slide" id="overload">
    <h2>CSS Overload and conflicts</h2>
    <p>Browsers have to deal with CSS files coming from the <em>browser</em>, <em>authors</em> and <em>users</em>. Browsers also manage CSS rules coming from different types of <em>author stylesheets</em> (link, inline and embeded). At some point browsers must have a mechanism to resolve <strong>all conflicts</strong> that can raise in some point.</p>
    <p class="delayed"><em>But wait, what does conflict mean?</em></p>
    <p class="delayed"><em>Conflict</em> is where more than one rule refers to the same element with different values for the same property. </p>
  </section>

</section>

<section>
  <header class="slide" id="conflicts">
    <h1>So how does the browser resolve the conflicts?</h1>
  </header>
  
  <section class="slide" id="important">
    <h2>Important</h2>
    <p>Browsers sort styles declarations according origin (browser, author, user) and importance (normal or important).</p>
    <p class="delayed">Authors can assign <code>!important</code> to any declaration.</p>
    <pre class="delayed"><code lang="html">.align-center {
  text-align: center !important;
}</code></pre>
    <p class="delayed"><code>!important</code> declarations override normal declarations. So normal declarations are those that don't contain the statement <code>!important</code>. Cristal clear right?</p>
  </section>

  <section class="slide" id="cascading-order">
    <h2>Cascading order</h2>
    <p>Browsers sort the declarations from lowest to top priority like this:</p>
    <ul>
      <li class="delayed">Browser default styles</li>
      <li class="delayed">Normal declarations in user stylesheets.</li>
      <li class="delayed">Normal declarations in author stylesheets ( External styles < Embeded styles < Inline styles ).</li>
      <li class="delayed">Important declarations in user stylesheets.</li>
      <li class="delayed">Important declarations in author stylesheets ( External styles < Embeded styles < Inline styles ).</li>
    </ul>
    <p class="delayed">Cool, but what if two declarations have the same origin or importance?</p>
  </section>
  
  <section class="slide" id="specificity">
    <h2>Specificity</h2>
    <p>If declarations have the same origin or importance then the declaration's selectors need to be scored, to see which will win. This scored is known as <em>specificity.</em></p>
    <p class="delayed"><em>Specificity</em> is calculated in a very particular way, based on the values of 4 distinct categories. For explanatory purposes, the CSS2 spec represents these categories using the letters a, b, c, and d. Each has a value of 0 by default.</p>
    <ul>
      <li class="delayed thin">a is equal to 1 if the declaration comes from a <em>style attribute</em> in the HTML ("inline styles").</li>
      <li class="delayed thin">b is equal to the number of <em>IDs</em> in a selector.</li>
      <li class="delayed thin">c is equal to the number of <em>classes, attributes and pseudo-classes</em> in a selector.</li>
      <li class="delayed thin">d is equal to the number of <em>elements and pseudo-elements</em> in a selector.</li>
    </ul>
  </section>
  
  <section class="slide" id="specificity-rules">
    <h2>Specificity: Rules</h2>
    <p>The specificity is given by concatenating all 4 resulting numbers.</p>
    <p class="delayed"><em>Rule of thumb: </em>A always beats B which always beats C, which always beats D.</p>
    <ul>
      <li class="delayed thin">No matter how many IDs are used in a selector, an inline style will always win... unless it has an <code>!important</code>.</li>
      <li class="delayed thin">No matter how many classes have a selector, an ID wins. <em>So avoid using IDs in your stylesheets for mental sanity.</em></li>
      <li class="delayed thin">No matter how many elements have a selector, a class beats it.</li>
      <li class="delayed thin">If two rules has the same specificity, the latter rule declared wins.</li>
    </ul>
  </section>

  <section class="slide" id="specificity-examples-1">
    <h2>Specificity example</h2>
    <div class="align-center">
      <div class="block">
        <pre><code lang="html">&lt;h2 style="color: aqua;">
  Blue H2 heading here
&lt;/h2></code></pre>
        <p>a = 1 inline style<br>b = 0 IDs<br>c = 0 classes<br>d = 0 element</p>
        <p><em>Specificity:</em> <strong>1000</strong></p>
      </div>
    </div>
  </section>

  <section class="slide" id="specificity-examples-2">
    <h2>Specificity example</h2>
    <div class="align-center">
      <div class="block small">
        <pre><code lang="html">#navigation {
  color: aqua;
}</code></pre>
        <p>a = 0 inline style<br>b = 1 IDs<br>c = 0 classes<br>d = 0 element</p>
        <p><em>Specificity:</em> <strong>100</strong></p>
      </div>  
    </div>
  </section>

  <section class="slide" id="specificity-examples-3">
    <h2>Specificity example</h2>
    <div class="align-center">
      <div class="block small">
        <pre><code lang="html">.slide-object {
  color: aqua;
}</code></pre>
        <p>a = 0 inline style<br>b = 0 IDs<br>c = 1 classes<br>d = 0 element</p>
        <p><em>Specificity:</em> <strong>10</strong></p>
      </div>  
    </div>
  </section>

  <section class="slide" id="specificity-examples-4">
    <h2>Specificity example</h2>
    <div class="align-center">
      <div class="block small">
        <pre><code lang="html">h2 {
  color: aqua;
}</code></pre>
        <p>a = 0 inline style<br>b = 0 IDs<br>c = 0 classes<br>d = 1 element</p>
        <p><em>Specificity:</em> <strong>1</strong></p>
      </div>  
    </div>
  </section>

  <section class="slide" id="specificity-examples-5">
    <h2>Specificity example</h2>
    <div class="align-center">
      <div class="block small">
        <pre><code lang="html">#navigation h2 {
  color: red;
}</code></pre>
        <p>a = 0 inline style<br>b = 1 IDs<br>c = 0 classes<br>d = 1 element</p>
        <p><em>Specificity:</em> <strong>101</strong></p>
      </div>  
    </div>
  </section>

  <section class="slide" id="specificity-examples-6">
    <h2>Specificity example</h2>
    <div class="align-center">
      <div class="block small">
        <pre><code lang="html">h2.subheader {
  color: red;
}</code></pre>
        <p>a = 0 inline style<br>b = 0 IDs<br>c = 1 classes<br>d = 1 element</p>
        <p><em>Specificity:</em> <strong>11</strong></p>
      </div>  
    </div>
  </section>

  <section class="slide" id="specificity-examples-7">
    <h2>Specificity example</h2>
    <div class="align-center">
      <div class="block small">
        <pre><code lang="html">#nav ul li a:hover {
  color: red;
}</code></pre>
        <p>a = 0 inline style<br>b = 1 IDs<br>c = 1 pseudo-class (:hover)<br>d = 3 elements (ul, li, a)</p>
        <p><em>Specificity:</em> <strong>113</strong></p>
      </div>  
    </div>
  </section>

  <section class="slide" id="specificity-examples-8">
    <h2>Specificity example</h2>
    <div class="align-center">
      <div class="block small">
        <pre><code lang="html">a[rel=external] {
  color: red;
}</code></pre>
        <p>a = 0 inline style<br>b = 0 IDs<br>c = 1 attribute (rel)<br>d = 1 element</p>
        <p><em>Specificity:</em> <strong>11</strong></p>
      </div>  
    </div>
  </section>
</section>

<section>
  <header class="slide" id="inheritance">
    <h1>Got it, so the inheritance?</h1>
  </header>

  <section class="slide" id="what-is-inheritance">
    <h2>What is the inheritance?</h2>
    <p>Inheritance is distinct from the cascade and involves the DOM tree.</p>
    <p class="delayed">Inheritance is the process by which elements inherit the values of properties from their ancestors in the DOM tree. Some properties, e.g. <code>color</code>, are automatically inherited by the children of the element to which they are applied. Each property defines whether it will be automatically inherited.</p>
    <p class="delayed">The <code>inherit</code> value can be set for any property and will force a given element to inherit its parent element’s property value, even if the property is not normally inherited.</p>
  </section>
</section>


<section class="slide" id="summary">
  <h2>Summary</h2>
  <p>We've learnt a few importan concepts in this module:</p>
  <ul>
    <li class="delayed">The <em>cascade</em> is a fundamental feature of CSS. It is an algorithm defining how to combine properties values originating from different sources.</li>
    <li class="delayed">Rules are chosen by origin and importance.</li>
    <li class="delayed">With same origin and/or importance, rules are chosen by the specificity of their selectors.</li>
    <li class="delayed">During the cascade, property values are resolved to computed values. Some of these values are inherited from its parent’s element in the DOM. This is knows as <em>inheritance</em>.</li>
  </ul>
</section>

<section class="slide" id="bonus">
  <h2>Bonus content</h2>
  <p>Some links to encourage to go deeper in your knowledge of the contents of this module:</p>
  <ul>
    <li><a href="http://coding.smashingmagazine.com/2010/11/02/the-important-css-declaration-how-and-when-to-use-it/">!important CSS Declarations: How and When to Use Them</a>.</li>
    <li><a href="http://www.w3.org/TR/CSS2/cascade.html">Assigning property values, Cascading, and Inheritance</a></li>
  </ul>
</section>

<footer class="slide" id="end" title="The End">
  <h2>Thank you!</h2>
  <p>Get it or contribute at <a href="http://github.com/nobuti/css-workshop">http://github.com/nobuti/css-workshop</a></p>
</footer>